{"rule":"WORDINESS","sentence":"^\\QNeste momento, são definidos os requisitos funcionais e não funcionais.\\E$"}
{"rule":"HUNSPELL_RULE","sentence":"^\\QSegundo a definição do Institute of Electrical and Electronics Engineers (IEEE) (\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q), a engenharia de software é a aplicação de uma sistemática, disciplinada e quantificável abordagem para o desenvolvimento, operação e manutenção de um software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QEssa análise possibilita a definição das funcionalidades, desempenho, segurança e interfaces do software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QOs requisitos funcionais especificam as funções que o software deve realizar, ou seja, o que o sistema deve fazer.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QSegundo a definição do Institute of Electrical and Electronics Engineers (IEEE) (\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q), a engenharia de software é a aplicação de uma sistemática, disciplinada e quantificável abordagem para o desenvolvimento, operação e manutenção de um software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QPara que a engenharia de software seja viável, dada a complexidade dos sistemas demandados na atualidade, foram desenvolvidas etapas, metodologias e ferramentas que dessem suporte aos atores envolvidos no projeto, como desenvolvedores, analistas, investidores, clientes, entre outros.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QO Ciclo de Vida de Desenvolvimento de Software (SDLC) consiste numa sequência de processos pelos quais o desenvolvimento de um software ocorre, de modo a produzir um resultado eficaz e de alta qualidade.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QExiste alguma variação no número de passos descritos por diferentes fontes, mas, em geral, há sete fases essenciais: planejamento, análise de requisitos, design, codificação, testes, implantação e manutenção.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA fase inicial envolve definir o propósito e o escopo do software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QNeste processo, os objetivos do software e qual problema ele se propõe a resolver precisam ficar claros a todos os envolvidos.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QAlém disso, nesta fase também ocorre o estudo de viabilidade, ou seja, desenvolvedores e outros atores do projeto avaliam desafios técnicos e financeiros que possam impactar a evolução ou o sucesso do software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QO resultado desse processo é o Documento de Especificação de Requisitos (DER), que descreve o propósito, as funcionalidades e características do software, servindo como guia para a equipe de desenvolvimento e fornecendo estimativas de custo, quando necessário.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QDesign.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA fase de design é responsável pela definição da estrutura do software, abrangendo sua funcionalidade e aparência.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA equipe de desenvolvimento detalha a arquitetura do sistema, a navegação, as interfaces de usuário e o design do banco de dados, assegurando que o software tenha boa usabilidade e seja eficiente.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QEntre as atividades desta fase, destaca-se a elaboração de diagramas de fluxo de dados, de entidade-relacionamento, de classes, protótipos de interface e outros diagramas arquiteturais, de modo a garantir que as estruturas projetadas sejam expressivas o suficiente para dar suporte a todas as funcionalidades do sistema.\\E$"}
{"rule":"PT_BARBARISMS_REPLACE","sentence":"^\\QO resultado desta fase é o Documento de Design de Software (DDS) que estrutura formalmente as informações do projeto e trata preocupações de design.\\E$"}
{"rule":"COLOCACAO_ADVERBIO","sentence":"^\\QAos meus pais, que sempre incentivaram meus estudos.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA equipe de desenvolvimento detalha a arquitetura do sistema, a navegação, as interfaces de usuário e a modelagem do banco de dados, assegurando que o software tenha boa usabilidade e seja eficiente.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QEntre as atividades desta fase, destaca-se a elaboração de diagramas de fluxo de dados, de entidade-relacionamento, de classes, protótipos de interface e diagramas arquiteturais.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QO resultado desta fase é o Documento de Design de Software (DDS) que estrutura formalmente as informações do projeto e trata preocupações de design.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QNa fase de codificação, os engenheiros e desenvolvedores transformam o design do software em código executável.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QO objetivo é produzir um software funcional, eficiente e com boa usabilidade.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QAo final da fase de codificação, o software passa a existir como um produto funcional, representando a materialização dos esforços das etapas anteriores, mesmo que ainda sejam necessários refinamentos e ajustes subsequentes.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA fase de testes consiste em verificar a qualidade e a confiabilidade do software antes de sua entrega aos usuários finais.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QInicialmente, são definidos parâmetros de teste alinhados aos requisitos do software e casos de teste que contemplem diferentes cenários de uso.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QAs falhas são encaminhadas para correção e o software retorna à fase de testes para validação.\\E$"}
{"rule":"HUNSPELL_RULE","sentence":"^\\QA fase de implantação ou deployment consiste em disponibilizar o software aos usuários finais, garantindo sua operacionalidade no ambiente de produção.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA fase de implantação ou deployment consiste em disponibilizar o software aos usuários finais, garantindo sua operacionalidade no ambiente de produção.\\E$"}
{"rule":"HUNSPELL_RULE","sentence":"^\\QRolling: a atualização ocorre de forma gradual, substituindo instâncias antigas por novas até que todo o sistema esteja atualizado; Blue-Green: dois ambientes paralelos são mantidos, um em produção e outro em preparação, permitindo a troca imediata entre eles; Canary: a nova versão é liberada primeiramente para um grupo de usuários, monitorando o comportamento do sistema antes de expandir a implantação para todos.\\E$"}
{"rule":"HUNSPELL_RULE","sentence":"^\\QRolling: a atualização ocorre de forma gradual, substituindo instâncias antigas por novas até que todo o sistema esteja atualizado; Blue-Green: dois ambientes paralelos são mantidos, um em produção e outro em preparação, permitindo a troca imediata entre eles; Canary: a nova versão é liberada primeiramente para um grupo de usuários, monitorando o comportamento do sistema antes de expandir a implantação para todos.\\E$"}
{"rule":"PT_BARBARISMS_REPLACE","sentence":"^\\QRolling: a atualização ocorre de forma gradual, substituindo instâncias antigas por novas até que todo o sistema esteja atualizado; Blue-Green: dois ambientes paralelos são mantidos, um em produção e outro em preparação, permitindo a troca imediata entre eles; Canary: a nova versão é liberada primeiramente para um grupo de usuários, monitorando o comportamento do sistema antes de expandir a implantação para todos.\\E$"}
{"rule":"HUNSPELL_RULE","sentence":"^\\QRolling: a atualização ocorre de forma gradual, substituindo instâncias antigas por novas até que todo o sistema esteja atualizado; Blue-Green: dois ambientes paralelos são mantidos, um em produção e outro em preparação, permitindo a troca imediata entre eles; Canary: a nova versão é liberada primeiramente para um grupo de usuários, monitorando o comportamento do sistema antes de expandir a implantação para todos.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QAlém de colocar o software em operação, esta fase envolve assegurar que os usuários compreendam seu funcionamento.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QDesta maneira, a fase de implantação marca a transição do software de projeto para produto, iniciando efetivamente o cumprimento de seus objetivos e a entrega de valor ao usuário.\\E$"}
{"rule":"HUNSPELL_RULE","sentence":"^\\QIsso envolve atualizações frequentes, aplicação de patches, correção de falhas e suporte ao usuário.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA fase de Manutenção é caracterizada por suporte contínuo e por melhorias incrementais, de modo a garantir que o software mantenha seu funcionamento adequado e acompanhe as necessidades dos usuários.\\E$"}
{"rule":"PT_BARBARISMS_REPLACE","sentence":"^\\QAlém disso, contempla evoluções do sistema decorrentes de feedbacks ou de mudanças no mercado.\\E$"}
{"rule":"HUNSPELL_RULE","sentence":"^\\QEste processo inclui a realização de atualizações frequentes, aplicação de patches, correção de falhas e suporte ao usuário.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QDe uma perspectiva de longo prazo, a manutenção também abrange estratégias de modernização ou substituição do software, para assegurar sua relevância e aderência às demandas tecnológicas ao passar do tempo.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA fase de manutenção é caracterizada por suporte contínuo e por melhorias incrementais, de modo a garantir que o software mantenha seu funcionamento adequado, acompanhe as necessidades dos usuários e as demandas de mercado.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QDe uma perspectiva de longo prazo, a manutenção também abrange estratégias de modernização ou substituição do software.\\E$"}
