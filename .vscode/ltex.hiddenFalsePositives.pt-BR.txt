{"rule":"WORDINESS","sentence":"^\\QNeste momento, são definidos os requisitos funcionais e não funcionais.\\E$"}
{"rule":"HUNSPELL_RULE","sentence":"^\\QSegundo a definição do Institute of Electrical and Electronics Engineers (IEEE) (\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q), a engenharia de software é a aplicação de uma sistemática, disciplinada e quantificável abordagem para o desenvolvimento, operação e manutenção de um software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QEssa análise possibilita a definição das funcionalidades, desempenho, segurança e interfaces do software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QOs requisitos funcionais especificam as funções que o software deve realizar, ou seja, o que o sistema deve fazer.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QSegundo a definição do Institute of Electrical and Electronics Engineers (IEEE) (\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q), a engenharia de software é a aplicação de uma sistemática, disciplinada e quantificável abordagem para o desenvolvimento, operação e manutenção de um software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QPara que a engenharia de software seja viável, dada a complexidade dos sistemas demandados na atualidade, foram desenvolvidas etapas, metodologias e ferramentas que dessem suporte aos atores envolvidos no projeto, como desenvolvedores, analistas, investidores, clientes, entre outros.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QO Ciclo de Vida de Desenvolvimento de Software (SDLC) consiste numa sequência de processos pelos quais o desenvolvimento de um software ocorre, de modo a produzir um resultado eficaz e de alta qualidade.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QExiste alguma variação no número de passos descritos por diferentes fontes, mas, em geral, há sete fases essenciais: planejamento, análise de requisitos, design, codificação, testes, implantação e manutenção.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA fase inicial envolve definir o propósito e o escopo do software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QNeste processo, os objetivos do software e qual problema ele se propõe a resolver precisam ficar claros a todos os envolvidos.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QAlém disso, nesta fase também ocorre o estudo de viabilidade, ou seja, desenvolvedores e outros atores do projeto avaliam desafios técnicos e financeiros que possam impactar a evolução ou o sucesso do software.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QO resultado desse processo é o Documento de Especificação de Requisitos (DER), que descreve o propósito, as funcionalidades e características do software, servindo como guia para a equipe de desenvolvimento e fornecendo estimativas de custo, quando necessário.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QDesign.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA fase de design é responsável pela definição da estrutura do software, abrangendo sua funcionalidade e aparência.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QA equipe de desenvolvimento detalha a arquitetura do sistema, a navegação, as interfaces de usuário e o design do banco de dados, assegurando que o software tenha boa usabilidade e seja eficiente.\\E$"}
{"rule":"BARBARISMS","sentence":"^\\QEntre as atividades desta fase, destaca-se a elaboração de diagramas de fluxo de dados, de entidade-relacionamento, de classes, protótipos de interface e outros diagramas arquiteturais, de modo a garantir que as estruturas projetadas sejam expressivas o suficiente para dar suporte a todas as funcionalidades do sistema.\\E$"}
{"rule":"PT_BARBARISMS_REPLACE","sentence":"^\\QO resultado desta fase é o Documento de Design de Software (DDS) que estrutura formalmente as informações do projeto e trata preocupações de design.\\E$"}
